<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.building.dao.CompProductMapper">
    <sql id="selectColumn">
        a.building_no as buildingNo,a.building_name as buildingName,b.doc_id as docId, b.doc_name as docName,t.COMP_PRODUCT_ID as
        compProductId,t.BUILDING_ID as buildingId,t.OPERATOR as operator, t.BUSINESS_TYPE as businessType,
        t.INTRODUCTION as introduction, t.DELETE_FLAG as deleteFlag, t.CREATE_STAFF_ID as createStaffId,
        t.CREATE_DATE as createDate, t.MODIFY_STAFF_ID as modifyStaffId, t.MODIFY_DATE as modifyDate, t.MODIFY_OP as modifyOp

    </sql>

    <select id="queryCompProduct" resultType="cc.mrbird.building.domain.CompProduct">
        select
        <include refid="selectColumn"/>
        from BD_COMP_PRODUCT t
        join bd_building a on t.building_id = a.building_id
        left join  bd_comp_product_doc b on t.comp_product_id = b.comp_product_id
        where t.delete_flag = 0 and a.delete_flag = 0
        <if test="buildingNo != null and buildingNo != ''">
            AND t.building_id = (select A.building_id from bd_building A where A.building_no like
            '%'||#{buildingNo}||'%')
        </if>
        <if test="buildingName != null and buildingName != ''">
            AND t.building_id = (select A.building_id from bd_building A where A.building_name like
            '%'||#{buildingName}||'%')
        </if>
        <if test="businessType != null and businessType != ''">
            AND t.BUSINESS_TYPE = #{businessType}
        </if>
        <if test="operator != null and operator != ''">
            AND t.operator = #{operator}
        </if>
        order by t.comp_product_id desc

    </select>

    <insert id="addCompProduct" useGeneratedKeys="true">
        <selectKey resultType="Long" order="BEFORE" keyProperty="compProductId">
            select seq_bd_comp_product.nextval as compProductId from dual
        </selectKey>
        insert into BD_COMP_PRODUCT
        values
        (#{compProductId},#{buildingId},#{operator},#{businessType},#{introduction},#{deleteFlag},#{createStaffId},
        #{createDate},#{modifyStaffId},#{modifyDate}, #{modifyOp})

    </insert>

    <!-- 通过id查询项目信息 -->
    <select id="findById" resultType="cc.mrbird.building.domain.CompProduct">
        select
        <include refid="selectColumn"/>
        from BD_COMP_PRODUCT t
        join bd_building a on t.building_id = a.building_id
        left join  bd_comp_product_doc b on t.comp_product_id = b.comp_product_id
        where t.delete_flag = 0 and a.delete_flag = 0
        and t.COMP_PRODUCT_ID = #{compProductId}
        order by t.COMP_PRODUCT_ID

    </select>

    <update id="updateCompProduct">
         update BD_COMP_PRODUCT t set t.building_id = #{buildingId},
                 t.OPERATOR=#{operator},t.BUSINESS_TYPE=#{businessType},t.INTRODUCTION=#{introduction},
                 t.modify_staff_id=#{modifyStaffId},t.modify_date=#{modifyDate}
                where t.COMP_PRODUCT_ID = #{compProductId} and t.delete_flag = 0
    </update>

    <!--删除竞争产品-->
    <update id="deleteCompProduct" parameterType="int[]">
         update BD_COMP_PRODUCT t set delete_flag = 1
                where t.COMP_PRODUCT_ID in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>


    <!--存入上传文件 -->
    <insert id="saveFile" useGeneratedKeys="true">
        <selectKey resultType="Long" order="BEFORE" keyProperty="fileId">
            select seq_bd_comp_product_content.nextval as fileId from dual
        </selectKey>
        insert into BD_COMP_PRODUCT_CONTENT
        values
        (#{fileId},#{filename},#{fileInput})

    </insert>

    <!--存入竞争产品与附件关系 -->
    <insert id="addCompProductDoc" useGeneratedKeys="true">
        <selectKey resultType="Long" order="BEFORE" keyProperty="compProductDocId">
            select seq_bd_comp_product_doc.nextval as fileId from dual
        </selectKey>
        insert into BD_COMP_PRODUCT_DOC
        values
        (#{compProductDocId},#{compProductId},#{docId},#{docName})

    </insert>

    <!--查询是否已经存在产品与附件的对应关系  返回附件id-->
    <select id="queryDocByCompProductId" resultType="Long">
         select t.doc_id from bd_comp_product_doc t where t.comp_product_id = #{compProductId}

    </select>
    <!-- 有竞争产品与附件关系存在时，更新对应的关系-->
    <update id="updateCompProductDoc">
         update BD_COMP_PRODUCT_DOC t
         set  t.doc_id = #{docId},
              t.doc_name = #{docName}
        where t.COMP_PRODUCT_ID = #{compProductId}
    </update>

    <!-- 获取最新附件ID-->
    <select id="getDocId" resultType="Long">
         select * from ( select  file_id  from bd_comp_product_content order by file_id desc) where rownum = 1
    </select>

    <!--获取附件内容-->
    <select id="queryDocById" resultType="cc.mrbird.building.domain.CompProduct">
       select a.file_content as fileContent from bd_comp_product_content a where a.file_id = #{docId}
    </select>
</mapper>